syntax = "proto3";

package chatbot.v1;

import "rbt/v1alpha1/options.proto";

////////////////////////////////////////////////////////////////////////

service ChatbotMethods {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (rbt.v1alpha1.method) = {
      transaction: {
        constructor: {},
      },
    };
  }

  rpc ListPostsForApproval(ListPostsForApprovalRequest)
      returns (ListPostsForApprovalResponse) {
    option (rbt.v1alpha1.method) = {
      reader: {},
    };
  }

  rpc Approve(ApproveRequest) returns (ApproveResponse) {
    option (rbt.v1alpha1.method) = {
      transaction: {},
    };
  }

  rpc ControlLoop(ControlLoopRequest) returns (ControlLoopResponse) {
    option (rbt.v1alpha1.method) = {
      workflow: {},
    };
  }
}

////////////////////////////////////////////////////////////////////////

message Post {
  string id = 1;
  string author = 2;
  string text = 3;
}

////////////////////////////////////////////////////////////////////////

message Chatbot {
  option (rbt.v1alpha1.state) = {
  };

  repeated Post posts_for_approval = 1;
}

////////////////////////////////////////////////////////////////////////

message CreateRequest {
  string name = 1;
  string channel_id = 2;
  string prompt = 3;
  bool human_in_the_loop = 4;
}

message CreateResponse {}

////////////////////////////////////////////////////////////////////////

message ListPostsForApprovalRequest {}

message ListPostsForApprovalResponse {
  repeated Post posts = 1;
}

////////////////////////////////////////////////////////////////////////

message ApproveRequest {
  string id = 1;
}

message ApproveResponse {}

////////////////////////////////////////////////////////////////////////

message ControlLoopRequest {
  string name = 1;
  string channel_id = 2;
  string prompt = 3;
  bool human_in_the_loop = 4;
}

message ControlLoopResponse {}

////////////////////////////////////////////////////////////////////////
